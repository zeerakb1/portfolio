{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx"],"names":["Col","React","props","ref","className","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","concat","push","classNames","useCol","_jsx","length","displayName","CardBody","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","cardImage","objectFit","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","_project$links","theme","useContext","ThemeContext","project","_jsxs","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","title","bodyText","ReactMarkdown","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant"],"mappings":"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","file":"static/js/7.45becc5d.chunk.js","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\r\nimport {\r\n  Button, Card, Badge, Col,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport '../../css/projectCard.css';\r\n\r\nconst styles = {\r\n  badgeStyle: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    margin: 5,\r\n  },\r\n  cardStyle: {\r\n    borderRadius: 10,\r\n    border: '4px solid #181818',\r\n    // border: '4px solid rgb(24, 24, 24)',\r\n  },\r\n  cardTitleStyle: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  },\r\n  cardTextStyle: {\r\n    textAlign: 'left',\r\n  },\r\n  cardImage: {\r\n    objectFit: 'cover',\r\n    // borderRadius: 55,\r\n    // width: '30.0vw',\r\n    // height: '35.0vh',\r\n    // width: '100%',\r\n    // height: '100%',\r\n    // objectFit: 'cover',\r\n  },\r\n  linkStyle: {\r\n    textDecoration: 'none',\r\n    padding: 10,\r\n  },\r\n  buttonStyle: {\r\n    margin: 5,\r\n  },\r\n};\r\n\r\nconst ProjectCard = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\r\n\r\n  const { project } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Card\r\n        className=\"card\"\r\n        style={{\r\n          ...styles.cardStyle,\r\n          backgroundColor: theme.cardBackground,\r\n          borderColor: theme.cardBorderColor,\r\n        }}\r\n        text={theme.bsSecondaryVariant}\r\n      >\r\n        <Card.Img variant=\"top\" src={project?.image} style={styles.cardImage} />\r\n        <Card.Body>\r\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\r\n          <Card.Text style={styles.cardTextStyle}>\r\n            {parseBodyText(project.bodyText)}\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        <Card.Body>\r\n          {project?.links?.map((link) => (\r\n            <Button\r\n              key={link.href}\r\n              style={styles.buttonStyle}\r\n              variant={'outline-' + theme.bsSecondaryVariant}\r\n              onClick={() => window.open(link.href, '_blank')}\r\n            >\r\n              {link.text}\r\n            </Button>\r\n          ))}\r\n        </Card.Body>\r\n        {project.tags && (\r\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\r\n            {project.tags.map((tag) => (\r\n              <Badge\r\n                key={tag}\r\n                pill\r\n                bg={theme.bsSecondaryVariant}\r\n                text={theme.bsPrimaryVariant}\r\n                style={styles.badgeStyle}\r\n              >\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    bodyText: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    links: PropTypes.arrayOf(PropTypes.shape({\r\n      text: PropTypes.string.isRequired,\r\n      href: PropTypes.string.isRequired,\r\n    })),\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"sourceRoot":""}