{"version":3,"sources":["components/ThemeToggler.jsx"],"names":["ThemeToggler","props","onClick","_jsx","_Fragment","children","AppContext","Consumer","values","style","marginBottom","DarkModeToggle","onChange","darkMode","toggle","checked","value","size","defaultProps"],"mappings":"uGAAA,iDAKA,SAASA,EAAaC,GACpB,MAAM,QAAEC,GAAYD,EAMpB,OACEE,cAAAC,WAAA,CAAAC,SACEF,cAACG,IAAWC,SAAQ,CAAAF,SAChBG,GACAL,cAAA,OAAKM,MAAO,CAAEC,aAAc,GAAIL,SAC9BF,cAACQ,IAAc,CACbC,SAAUA,KAAqBJ,EAAOK,SAVvCC,cACTZ,KAUUa,QAASP,EAAOK,SAASG,MACzBC,KAAM,UAOpB,CAKAjB,EAAakB,aAAe,CAC1BhB,QAASA,QAGIF,W","file":"static/js/9.b897561a.chunk.js","sourcesContent":["import React from 'react';\r\nimport DarkModeToggle from 'react-dark-mode-toggle';\r\nimport PropTypes from 'prop-types';\r\nimport AppContext from '../AppContext';\r\n\r\nfunction ThemeToggler(props) {\r\n  const { onClick } = props;\r\n  const handleOnChange = (darkMode) => {\r\n    darkMode.toggle();\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppContext.Consumer>\r\n        {(values) => (\r\n          <div style={{ marginBottom: 8 }}>\r\n            <DarkModeToggle\r\n              onChange={() => handleOnChange(values.darkMode)}\r\n              checked={values.darkMode.value}\r\n              size={50}\r\n            />\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    </>\r\n  );\r\n}\r\n\r\nThemeToggler.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\nThemeToggler.defaultProps = {\r\n  onClick: () => {},\r\n};\r\n\r\nexport default ThemeToggler;\r\n"],"sourceRoot":""}