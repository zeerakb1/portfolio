{"version":3,"sources":["components/Header.jsx","components/Education.jsx"],"names":["Header","props","title","_jsx","className","children","Education","theme","useContext","ThemeContext","header","data","setData","useState","width","setWidth","mode","setMode","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","education","method","then","res","json","catch","err","window","innerWidth","_jsxs","_Fragment","Fade","style","Container","Chrono","hideControls","allowDynamicUpdate","useReadMore","items","cardHeight","mediaHeight","fontSizes","cardTitle","primary","accentColor","secondary","cardForeColor","chronoTheme","cardBgColor","titleColor","map","icon","src","alt","FallbackSpinner"],"mappings":"uJAAA,6BAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,kCCPA,qGAkGeI,UAvFf,SAAmBL,GACjB,MAAMM,EAAQC,qBAAWC,MACnB,OAAEC,GAAWT,GACZU,EAAMC,GAAWC,mBAAS,OAC1BC,EAAOC,GAAYF,mBAAS,SAC5BG,EAAMC,GAAWJ,mBAAS,wBA0BjC,OAvBAK,qBAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdC,MAAMC,IAAUC,UAAW,CACzBC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQlB,EAAQkB,KACtBE,OAAOC,GAAQA,KAER,QAANd,EAAAe,cAAM,IAAAf,OAAA,EAANA,EAAQgB,YAAa,KACvBlB,EAAQ,aAGA,QAANG,EAAAc,cAAM,IAAAd,OAAA,EAANA,EAAQe,YAAa,MAER,QAANd,EAAAa,cAAM,IAAAb,OAAA,EAANA,EAAQc,aAAc,MAAa,QAANb,EAAAY,cAAM,IAAAZ,OAAA,EAANA,EAAQa,YAAa,IAD3DpB,EAAS,SAGM,QAANQ,EAAAW,cAAM,IAAAX,OAAA,EAANA,EAAQY,aAAc,MAAa,QAANX,EAAAU,cAAM,IAAAV,OAAA,EAANA,EAAQW,YAAa,KAC3DpB,EAAS,QAETA,EAAS,OACX,GACC,IAGDqB,eAAAC,WAAA,CAAAhC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOQ,IACdC,EACCR,cAACmC,IAAI,CAAAjC,SACHF,cAAA,OAAKoC,MAAO,CAAEzB,SAASV,UAAU,4BAA2BC,SAC1DF,cAACqC,IAAS,CAAAnC,SACRF,cAACsC,IAAM,CACLC,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOlC,EAAKgB,UACZmB,WAAY,IACZC,YAAa,MACb/B,KAAMA,EAENgC,UAAW,CAGTC,UAAW,SAGb1C,MAAO,CACL2C,QAAS3C,EAAM4C,YACfC,UAAW,UAGXC,cAAe9C,EAAM+C,YAAYD,cAGjCE,YAAa,UACbC,WAAYjD,EAAM+C,YAAYE,YAC9BnD,SAEFF,cAAA,OAAKC,UAAU,eAAcC,SAC1BM,EAAKgB,UAAU8B,KAAK9B,GAAeA,EAAU+B,KAC5CvD,cAAA,OAEEwD,IAAKhC,EAAU+B,KAAKC,IACpBC,IAAKjC,EAAU+B,KAAKE,KAFfjC,EAAU+B,KAAKC,KAIpB,iBAMZxD,cAAC0D,UAAe,MAG1B,C","file":"static/js/5.9a20ed56.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Chrono } from 'react-chrono';\r\nimport { Container } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal';\r\nimport { ThemeContext } from 'styled-components';\r\nimport endpoints from '../constants/endpoints';\r\nimport Header from './Header';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/education.css';\r\n\r\nfunction Education(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n  const [width, setWidth] = useState('50vw');\r\n  const [mode, setMode] = useState('VERTICAL_ALTERNATING');\r\n  // const [mode, setMode] = useState('HORIZONTAL');\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.education, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res))\r\n      .catch((err) => err);\r\n\r\n    if (window?.innerWidth < 576) {\r\n      setMode('VERTICAL');\r\n    }\r\n\r\n    if (window?.innerWidth < 576) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\r\n      setWidth('75vw');\r\n    } else {\r\n      setWidth('90vw');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data ? (\r\n        <Fade>\r\n          <div style={{ width }} className=\"section-content-container\">\r\n            <Container>\r\n              <Chrono\r\n                hideControls\r\n                allowDynamicUpdate\r\n                useReadMore={false}\r\n                items={data.education}\r\n                cardHeight={450 * 0.5}\r\n                mediaHeight={250 * 0.75}\r\n                mode={mode}\r\n                // textOverlay\r\n                fontSizes={{\r\n                  // cardSubtitle: '24px',\r\n                  // cardText: '10px',\r\n                  cardTitle: '1.5vm',\r\n                  // title: '16px',\r\n                }}\r\n                theme={{\r\n                  primary: theme.accentColor,\r\n                  secondary: '#312d2d',\r\n                  // cardBgColor: '#312d2d',\r\n                  // cardForeColor: 'black',\r\n                  cardForeColor: theme.chronoTheme.cardForeColor,\r\n                  // cardBgColor: theme.chronoTheme.cardBgColor,\r\n                  // cardForeColor: 'black',\r\n                  cardBgColor: '#232323',\r\n                  titleColor: theme.chronoTheme.titleColor,\r\n                }}\r\n              >\r\n                <div className=\"chrono-icons\">\r\n                  {data.education.map((education) => (education.icon ? (\r\n                    <img\r\n                      key={education.icon.src}\r\n                      src={education.icon.src}\r\n                      alt={education.icon.alt}\r\n                    />\r\n                  ) : null))}\r\n                </div>\r\n              </Chrono>\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nEducation.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Education;\r\n"],"sourceRoot":""}